import os
import json
import sys

# –ó–ê–í–ê–ù–¢–ê–ñ–£–Æ –§–ê–ô–õ
def load_phonebook(filename='contacts.json'):
    if not os.path.exists(filename):
        raise FileNotFoundError(f"–§–∞–π–ª '{filename}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    with open(filename, 'r', encoding='utf-8') as f:
        return json.load(f)


def save_phonebook(contacts, filename='contacts.json'):
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(contacts, f, ensure_ascii=False, indent=2)

# –î–û–î–ê–í–ê–ù–ù–Ø –ö–û–ù–¢–ê–ö–¢–£
def add_contact(contacts):
    number = input('–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ').strip()
    if not number:
        print("–ü–æ—Ä–æ–∂–Ω—ñ–π –≤–≤—ñ–¥")
        return

    if number in contacts:
        print('–¢–∞–∫–∏–π –Ω–æ–º–µ—Ä —É–∂–µ —ñ—Å–Ω—É—î!')
        return
    contacts[number] = {
        "first_name": input("–Ü–º'—è: ").strip(),
        "last_name": input("–ü—Ä—ñ–∑–≤–∏—â–µ: ").strip(),
        "city": input("–ú—ñ—Å—Ç–æ: ").strip(),
        "state": input("–û–±–ª–∞—Å—Ç—å: ").strip()
    }
    print("–ó–∞–ø–∏—Å –¥–æ–¥–∞–Ω–æ.")

# –í–ò–î–ê–õ–ï–ù–ù–Ø –ö–û–ù–¢–ê–ö–¢–£
def delete_contact(contacts):
    number = input(
        "–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ Enter, —â–æ–± —à—É–∫–∞—Ç–∏ –∑–∞ —ñ–º‚Äô—è–º/–ø—Ä—ñ–∑–≤–∏—â–µ–º): "
    ).strip().lower()

    if number:
        if number in contacts:
            approve = input("–î—ñ–π—Å–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –∫–æ–Ω—Ç–∞–∫—Ç? (–≤–≤–µ–¥–∏ —Ç–∞–∫ –∞–±–æ –Ω—ñ): ").strip().lower()
            if approve == "—Ç–∞–∫":
                del contacts[number]
                print("–ö–æ–Ω—Ç–∞–∫—Ç –≤–∏–¥–∞–ª–µ–Ω–æ")
            else:
                print("–í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É –Ω–µ –≤—ñ–¥–±—É–ª–æ—Å—å")
        else:
            print("–ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
        return

    first = input("–Ü–º‚Äô—è (–º–æ–∂–Ω–∞ –ª–∏—à–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º): ").strip().lower()
    second = input("–ü—Ä—ñ–∑–≤–∏—â–µ (–º–æ–∂–Ω–∞ –ª–∏—à–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º): ").strip().lower()

    found = []
    for num, data in contacts.items():
        if (not first or first in data['first_name'].lower()) and (not second or second in data['last_name'].lower()):
            found.append((num, data))

    if not found:
        print("–¢–∞–∫–∏—Ö –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return

    for index_in_list, (number, data) in enumerate(found, start=1):
        print(f"\n{index_in_list}. {number} {data['first_name']} {data['last_name']}")

    choice = input("–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç—É –∞–±–æ —ñ–Ω–¥–µ–∫—Å –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è (–∞–±–æ '–Ω—ñ' –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è): ").strip().lower()

    if choice == "–Ω—ñ":
        print("–í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ")
        return

    if choice.isdigit():
        index_in_list = int(choice) - 1
        if 0 <= index_in_list < len(found):
            number_to_delete = found[index_in_list][0]
            del contacts[number_to_delete]
            print("–û–±—Ä–∞–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–µ")
        else:
            print("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤–∏–±—ñ—Ä")
    elif choice in contacts:
        del contacts[choice]
        print("–û–±—Ä–∞–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–µ")
    else:
        print("–ù–µ–¥—ñ–π—Å–Ω–∏–π –≤–≤—ñ–¥")


# –û–ù–û–í–õ–ï–ù–ù–Ø –ö–û–ù–¢–ê–ö–¢–£
def update_contact(contacts):
    number = input("–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ Enter, —â–æ–± —à—É–∫–∞—Ç–∏ –∑–∞ –ø—Ä—ñ–∑–≤–∏—â–µ–º): ").strip().lower()

    if number:
        if number in contacts:
            –∫–æ–Ω—Ç–∞–∫—Ç = contacts[number]
        else:
            print("–ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
            return
    else:
        last_name = input("–í–≤–µ–¥–∏ –ø—Ä—ñ–∑–≤–∏—â–µ: ").strip().lower()
        –∑–±—ñ–≥–∏ = []
        for num, data in contacts.items():
            if last_name in data['last_name'].lower():
                –∑–±—ñ–≥–∏.append((num, data))

        if not –∑–±—ñ–≥–∏:
            print("–ó–±—ñ–≥—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return

        for i, (num, data) in enumerate(–∑–±—ñ–≥–∏, 1):
            print(f"{i}. {num} ‚Äî {data['first_name']} {data['last_name']}")

        –≤–∏–±—ñ—Ä = input("–í–≤–µ–¥–∏ —ñ–Ω–¥–µ–∫—Å –∫–æ–Ω—Ç–∞–∫—Ç—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (–∞–±–æ '–Ω—ñ' –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è): ").strip().lower()
        if –≤–∏–±—ñ—Ä == "–Ω—ñ":
            print("–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ")
            return
        if not –≤–∏–±—ñ—Ä.isdigit():
            print("–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –≤–≤—ñ–¥")
            return

        —ñ–Ω–¥–µ–∫—Å = int(–≤–∏–±—ñ—Ä) - 1
        if —ñ–Ω–¥–µ–∫—Å < 0 or —ñ–Ω–¥–µ–∫—Å >= len(–∑–±—ñ–≥–∏):
            print("–ù–µ–¥—ñ–π—Å–Ω–∏–π —ñ–Ω–¥–µ–∫—Å")
            return

        number = –∑–±—ñ–≥–∏[—ñ–Ω–¥–µ–∫—Å][0]
        –∫–æ–Ω—Ç–∞–∫—Ç = contacts[number]

    print("–ó–∞–ª–∏—à –ø–æ–ª–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —è–∫—â–æ –Ω–µ —Ö–æ—á–µ—à –∑–º—ñ–Ω—é–≤–∞—Ç–∏.")
    for field in ['first_name', 'last_name', 'city', 'state']:
        –Ω–æ–≤–µ = input(f"{field}: ").strip()
        if –Ω–æ–≤–µ:
            –∫–æ–Ω—Ç–∞–∫—Ç[field] = –Ω–æ–≤–µ

    contacts[number] = –∫–æ–Ω—Ç–∞–∫—Ç
    print("–ö–æ–Ω—Ç–∞–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ")


# –ü–û–®–£–ö –ó–ê –ü–û–õ–ï–ú
def search_by_field(contacts, field, prompt):
    look = input(prompt).strip().lower()
    found = False
    for number, data in contacts.items():
        if look in data.get(field, '').lower():
            print("-" * 40)
            print(f"–ù–æ–º–µ—Ä:      {number}")
            print(f"–Ü–º‚Äô—è:       {data['first_name']}")
            print(f"–ü—Ä—ñ–∑–≤–∏—â–µ:   {data['last_name']}")
            print(f"–ú—ñ—Å—Ç–æ:      {data['city']}")
            print(f"–û–±–ª–∞—Å—Ç—å:    {data['state']}")
            found = True
    if not found:
        print("üîç –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
    else:
        print("#" * 40)

# –ü–û–®–£–ö –ó–ê –ü–û–í–ù–ò–ú –Ü–ú'–Ø–ú
def search_by_full_name(contacts):
    full_name = input("–î–æ–¥–∞–π—Ç–µ –ø–æ–≤–Ω–µ —ñ–º`—è: ").strip().lower()
    for number, data in contacts.items():
        name = f"{data.get('first_name', '').strip()} {data.get('last_name', '').strip()}".lower()
        if full_name == name:
            print("-" * 40)
            print(f"–ù–æ–º–µ—Ä:      {number}")
            print(f"–Ü–º'—è:       {data['first_name']}")
            print(f"–ü—Ä—ñ–∑–≤–∏—â–µ:   {data['last_name']}")
            print(f"–ú—ñ—Å—Ç–æ:      {data['city']}")
            print(f"–û–±–ª–∞—Å—Ç—å:    {data['state']}")
            found = True
        if not found:
            print("–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        else:
            print("#" * 40)

# –ü–û–®–£–ö –ó–ê –¢–ï–õ–ï–§–û–ù–û–ú
def search_by_phone(contacts):
    number = input("–í–≤–∫–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ").strip()
    if number in contacts:
        data = contacts[number]
        print("-" * 40)
        print(f"–ù–æ–º–µ—Ä:      {number}")
        print(f"–Ü–º'—è:       {data['first_name']}")
        print(f"–ü—Ä—ñ–∑–≤–∏—â–µ:   {data['last_name']}")
        print(f"–ú—ñ—Å—Ç–æ:      {data['city']}")
        print(f"–û–±–ª–∞—Å—Ç—å:    {data['state']}")
        found = True
    if not found:
        print("–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    else:
        print("#" * 40)

# –ü–û–®–£–ö –ó–ê –ú–Ü–°–¶–ï–ú –ü–†–û–ñ–ò–í–ê–ù–ù–Ø
def search_by_city_state(contacts):
    home = input("–í–≤–µ–¥—ñ—Ç—å –º—ñ—Å—Ç–æ —á–∏ –æ–±–ª–∞—Å—Ç—å: ").strip()
    found = False
    for number, data in contacts.items():
        city = data.get('city', '').strip().lower()
        state = data.get('state', '').strip.lower()
        if home in state or home in city:
            print("-" * 40)
            print(f"–ù–æ–º–µ—Ä:      {number}")
            print(f"–Ü–º'—è:       {data['first_name']}")
            print(f"–ü—Ä—ñ–∑–≤–∏—â–µ:   {data['last_name']}")
            print(f"–ú—ñ—Å—Ç–æ:      {data['city']}")
            print(f"–û–±–ª–∞—Å—Ç—å:    {data['state']}")
            found = True
        if not found:
            print("–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

# –ú–ï–ù–Æ
def main():
    if len(sys.argv) < 2:
        print("–ó–∞–ø—É—Å–∫: python phonebook.py contacts.json")
        return

    filename = sys.argv[1]
    contacts = load_phonebook(filename)

    while True:
        print("\n–ú–µ–Ω—é:")
        print("[1] –î–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å")
        print("[2] –ü–æ—à—É–∫ –∑–∞ —ñ–º‚Äô—è–º")
        print("[3] –ü–æ—à—É–∫ –∑–∞ –ø—Ä—ñ–∑–≤–∏—â–µ–º")
        print("[4] –ü–æ—à—É–∫ –∑–∞ –ø–æ–≤–Ω–∏–º —ñ–º‚Äô—è–º")
        print("[5] –ü–æ—à—É–∫ –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É")
        print("[6] –ü–æ—à—É–∫ –∑–∞ –º—ñ—Å—Ü–µ–º –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è")
        print("[7] –û–Ω–æ–≤–∏—Ç–∏ –∑–∞–ø–∏—Å")
        print("[8] –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–ø–∏—Å")
        print("[9] –í–∏–π—Ç–∏ —Ç–∞ –∑–±–µ—Ä–µ–≥—Ç–∏")

        choice = input(">>> ").strip()

        if choice == '1':
            add_contact(contacts)
        elif choice == '2':
            search_by_field(contacts, 'first_name', '–í–≤–µ–¥—ñ—Ç—å —ñ–º‚Äô—è: ')
        elif choice == '3':
            search_by_field(contacts, 'last_name', '–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ: ')
        elif choice == '4':
            search_by_full_name(contacts)
        elif choice == '5':
            search_by_phone(contacts)
        elif choice == '6':
            search_by_city_state(contacts)
        elif choice == '7':
            update_contact(contacts)
        elif choice == '8':
            delete_contact(contacts)
        elif choice == '9':
            save_phonebook(contacts, filename)
            print("–ó–±–µ—Ä–µ–∂–µ–Ω–æ. –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ!")
            break
        else:
            print("–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞.")


if __name__ == "__main__":
    main()


